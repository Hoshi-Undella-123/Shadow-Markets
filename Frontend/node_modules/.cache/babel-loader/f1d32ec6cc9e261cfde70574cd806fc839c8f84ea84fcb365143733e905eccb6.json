{"ast":null,"code":"var _jsxFileName = \"/Users/hoshitaundella/PycharmProjects/Shadow-Markets/Frontend/src/components/ConstraintList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConstraintList({\n  constraints,\n  selectedConstraints,\n  onSelect\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Constraints\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), constraints.map(constraint => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selectedConstraints.includes(constraint.id),\n        onChange: () => {\n          if (selectedConstraints.includes(constraint.id)) {\n            onSelect(selectedConstraints.filter(id => id !== constraint.id));\n          } else {\n            onSelect([...selectedConstraints, constraint.id]);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 11\n      }, this), constraint.name]\n    }, constraint.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n}\n_c = ConstraintList;\nexport default ConstraintList;\nvar _c;\n$RefreshReg$(_c, \"ConstraintList\");","map":{"version":3,"names":["ConstraintList","constraints","selectedConstraints","onSelect","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","map","constraint","type","checked","includes","id","onChange","filter","name","_c","$RefreshReg$"],"sources":["/Users/hoshitaundella/PycharmProjects/Shadow-Markets/Frontend/src/components/ConstraintList.js"],"sourcesContent":["function ConstraintList({ constraints, selectedConstraints, onSelect }) {\n  return (\n    <div>\n      <h2>Constraints</h2>\n      {constraints.map(constraint => (\n        <label key={constraint.id}>\n          <input\n            type=\"checkbox\"\n            checked={selectedConstraints.includes(constraint.id)}\n            onChange={() => {\n              if (selectedConstraints.includes(constraint.id)) {\n                onSelect(selectedConstraints.filter(id => id !== constraint.id));\n              } else {\n                onSelect([...selectedConstraints, constraint.id]);\n              }\n            }}\n          />\n          {constraint.name}\n        </label>\n      ))}\n    </div>\n  );\n}\n\nexport default ConstraintList;\n"],"mappings":";;AAAA,SAASA,cAAcA,CAAC;EAAEC,WAAW;EAAEC,mBAAmB;EAAEC;AAAS,CAAC,EAAE;EACtE,oBACEC,OAAA;IAAAC,QAAA,gBACED,OAAA;MAAAC,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBR,WAAW,CAACS,GAAG,CAACC,UAAU,iBACzBP,OAAA;MAAAC,QAAA,gBACED,OAAA;QACEQ,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEX,mBAAmB,CAACY,QAAQ,CAACH,UAAU,CAACI,EAAE,CAAE;QACrDC,QAAQ,EAAEA,CAAA,KAAM;UACd,IAAId,mBAAmB,CAACY,QAAQ,CAACH,UAAU,CAACI,EAAE,CAAC,EAAE;YAC/CZ,QAAQ,CAACD,mBAAmB,CAACe,MAAM,CAACF,EAAE,IAAIA,EAAE,KAAKJ,UAAU,CAACI,EAAE,CAAC,CAAC;UAClE,CAAC,MAAM;YACLZ,QAAQ,CAAC,CAAC,GAAGD,mBAAmB,EAAES,UAAU,CAACI,EAAE,CAAC,CAAC;UACnD;QACF;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACDE,UAAU,CAACO,IAAI;IAAA,GAZNP,UAAU,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAalB,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACU,EAAA,GAtBQnB,cAAc;AAwBvB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}